# ?????? ?? ??
spring.application.name=lastProject

# ?? ?? ??
server.port=8088

# Oracle ?????? ??
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# JPA ??
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect

# ???? ?? ? ?? ???? ?? ??
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# ??? ?? ?? ??
spring.thymeleaf.cache=false

# ??? ??
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# AWS S3 ??
aws.accessKeyId=${AWS_ACCESS_KEY_ID}
aws.secretKey=${AWS_SECRET_ACCESS_KEY}
aws.s3.bucketName=${AWS_S3_BUCKET_NAME}
aws.region=${AWS_REGION}

# ?? ??? ?? ?? ??
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# OAuth2 ??
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}

# PayPal Configuration
paypal.client.id=${PAYPAL_CLIENT_ID}
paypal.client.secret=${PAYPAL_CLIENT_SECRET}
paypal.mode=${PAYPAL_MODE}

# 카카오 OAuth2 설정 추가
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

coolsms.api_key=NCSTMPNCR9TDBNYV
coolsms.api_secret=HPW7LWFPTPQYAWPV9HOIHU3TLLZIKVZ4
coolsms.from=01098335930

# 토큰 만료 시간 설정 코드. 아래의 코드는 1시간 제한이다.
jwt.expiration=3600000  # 1 hour in milliseconds
spring.mail.host=${SMTP_HOST}
spring.mail.port=${SMTP_PORT}
spring.mail.username=${SMTP_USERNAME}
spring.mail.password=${SMTP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
